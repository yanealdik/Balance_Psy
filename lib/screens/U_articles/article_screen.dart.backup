import 'package:flutter/material.dart';
import '../../theme/app_colors.dart';
import '../../theme/app_text_styles.dart';
import 'ArticleDetail/ArticleDetailScreen.dart';

/// Экран полезных статей с двухслойным эффектом карточек
class ArticlesScreen extends StatefulWidget {
  const ArticlesScreen({Key? key}) : super(key: key);

  @override
  State<ArticlesScreen> createState() => _ArticlesScreenState();
}

class _ArticlesScreenState extends State<ArticlesScreen> {
  int selectedCategory = 0;

  final List<String> categories = ['Все', 'Эмоции', 'Самопомощь', 'Отношения'];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: AppColors.backgroundLight,
      body: SafeArea(
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            // Заголовок
            Padding(
              padding: const EdgeInsets.fromLTRB(20, 20, 20, 16),
              child: Text(
                'Полезные статьи',
                style: AppTextStyles.h2.copyWith(fontSize: 28),
              ),
            ),

            // Категории
            SizedBox(
              height: 44,
              child: ListView.builder(
                scrollDirection: Axis.horizontal,
                padding: const EdgeInsets.symmetric(horizontal: 20),
                itemCount: categories.length,
                itemBuilder: (context, index) {
                  return Padding(
                    padding: const EdgeInsets.only(right: 12),
                    child: _buildCategoryChip(index),
                  );
                },
              ),
            ),

            const SizedBox(height: 24),

            // Контент со скроллом
            Expanded(
              child: SingleChildScrollView(
                padding: const EdgeInsets.symmetric(horizontal: 20),
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    // Самое популярное
                    _buildSectionTitle('Самое популярное'),
                    const SizedBox(height: 16),
                    _buildHorizontalArticles([
                      {
                        'title': 'Радость без причины',
                        'image': 'assets/images/article/happy.png',
                        'category': 'Эмоции',
                        'readTime': 3,
                      },
                      {
                        'title': 'Почему я чувствую пустоту',
                        'image': 'assets/images/article/empty.png',
                        'category': 'Эмоции',
                        'readTime': 7,
                      },
                      {
                        'title': 'Как отпустить обиду',
                        'image': 'assets/images/article/givesad.png',
                        'category': 'Эмоции',
                        'readTime': 5,
                      },
                    ]),

                    const SizedBox(height: 32),

                    // Самопомощь
                    _buildSectionTitle('Самопомощь'),
                    const SizedBox(height: 16),
                    _buildHorizontalArticles([
                      {
                        'title': '5 минут тишины',
                        'image': 'assets/images/article/5min.png',
                        'category': 'Самопомощь',
                        'readTime': 3,
                      },
                      {
                        'title': 'Как перестать себя ругать',
                        'image': 'assets/images/article/dontAgro.png',
                        'category': 'Самопомощь',
                        'readTime': 6,
                      },
                      {
                        'title': 'Дыши осознанно',
                        'image': 'assets/images/article/calm.png',
                        'category': 'Самопомощь',
                        'readTime': 4,
                      },
                    ]),

                    const SizedBox(height: 32),

                    // Отношения
                    _buildSectionTitle('Отношения'),
                    const SizedBox(height: 16),
                    _buildHorizontalArticles([
                      {
                        'title': 'Почему я привязываюсь',
                        'image': 'assets/images/article/whyIlove.png',
                        'category': 'Отношения',
                        'readTime': 5,
                      },
                      {
                        'title': 'Как говорить о чувствах',
                        'image': 'assets/images/article/sense.png',
                        'category': 'Отношения',
                        'readTime': 4,
                      },
                      {
                        'title': 'Что делать, если отношения выгорают',
                        'image': 'assets/images/article/firelove.png',
                        'category': 'Отношения',
                        'readTime': 8,
                      },
                    ]),

                    const SizedBox(height: 32),

                    // Состояние покоя
                    _buildSectionTitle('Состояние покоя'),
                    const SizedBox(height: 16),
                    _buildHorizontalArticles([
                      {
                        'title': 'Вечерняя перезагрузка',
                        'image': 'assets/images/article/evening.png',
                        'category': 'Самопомощь',
                        'readTime': 5,
                      },
                      {
                        'title': 'Тело и эмоции: связь',
                        'image': 'assets/images/article/body.png',
                        'category': 'Эмоции',
                        'readTime': 6,
                      },
                      {
                        'title': 'Осознанное дыхание перед сном',
                        'image': 'assets/images/article/sleep.png',
                        'category': 'Самопомощь',
                        'readTime': 4,
                      },
                    ]),

                    const SizedBox(height: 30),
                  ],
                ),
              ),
            ),
          ],
        ),
      ),
    );
  }

  // Категория (чип)
  Widget _buildCategoryChip(int index) {
    final isSelected = selectedCategory == index;

    return GestureDetector(
      onTap: () {
        setState(() {
          selectedCategory = index;
        });
      },
      child: Container(
        padding: const EdgeInsets.symmetric(horizontal: 24, vertical: 10),
        decoration: BoxDecoration(
          color: isSelected ? AppColors.primary : Colors.white,
          borderRadius: BorderRadius.circular(22),
          border: Border.all(
            color: isSelected ? AppColors.primary : AppColors.inputBorder,
            width: 1.5,
          ),
        ),
        child: Text(
          categories[index],
          style: AppTextStyles.body1.copyWith(
            fontSize: 15,
            color: isSelected ? Colors.white : AppColors.textSecondary,
            fontWeight: isSelected ? FontWeight.w600 : FontWeight.w400,
          ),
        ),
      ),
    );
  }

  // Заголовок секции
  Widget _buildSectionTitle(String title) {
    return Text(title, style: AppTextStyles.h3.copyWith(fontSize: 22));
  }

  // Горизонтальный список статей
  Widget _buildHorizontalArticles(List<Map<String, dynamic>> articles) {
    return SizedBox(
      height: 150,
      child: ListView.builder(
        scrollDirection: Axis.horizontal,
        itemCount: articles.length,
        itemBuilder: (context, index) {
          final article = articles[index];
          return Padding(
            padding: EdgeInsets.only(
              right: index < articles.length - 1 ? 16 : 0,
            ),
            child: _buildLayeredCard(article),
          );
        },
      ),
    );
  }

  // Карточка с двухслойным эффектом (Stack) + ПЕРЕХОД
  Widget _buildLayeredCard(Map<String, dynamic> article) {
    return GestureDetector(
      onTap: () {
        // Переход в ArticleDetailScreen с передачей данных
        Navigator.push(
          context,
          MaterialPageRoute(
            builder: (context) => ArticleDetailScreen(
              title: article['title'] ?? 'Статья',
              category: article['category'] ?? 'Общее',
              readTime: article['readTime'] ?? 5,
            ),
          ),
        );
      },
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          // Контейнер со стеком (110x110)
          SizedBox(
            width: 110,
            height: 110,
            child: Stack(
              children: [
                // Нижний слой (синяя "тень") - left: 0, bottom: 0
                Positioned(
                  left: 0,
                  bottom: 0,
                  child: Container(
                    width: 110,
                    height: 110,
                    decoration: BoxDecoration(
                      color: AppColors.primary,
                      borderRadius: BorderRadius.circular(20),
                    ),
                  ),
                ),
                // Верхний слой (белая карточка с изображением) - right: 0, top: 0
                Positioned(
                  right: 0,
                  top: 0,
                  child: Container(
                    width: 103,
                    height: 103,
                    decoration: BoxDecoration(
                      color: Colors.white,
                      borderRadius: BorderRadius.circular(20),
                      boxShadow: [
                        BoxShadow(
                          color: Colors.black.withOpacity(0.08),
                          blurRadius: 4,
                          offset: const Offset(0, 2),
                        ),
                      ],
                    ),
                    child: ClipRRect(
                      borderRadius: BorderRadius.circular(20),
                      child: Image.asset(
                        article['image'],
                        fit: BoxFit.cover,
                        errorBuilder: (context, error, stackTrace) {
                          // Если изображение не найдено, показываем placeholder
                          return Container(
                            color: AppColors.primary.withOpacity(0.1),
                            child: const Center(
                              child: Icon(
                                Icons.article,
                                size: 40,
                                color: AppColors.primary,
                              ),
                            ),
                          );
                        },
                      ),
                    ),
                  ),
                ),
              ],
            ),
          ),

          const SizedBox(height: 8),

          // Текст под карточкой (максимум 2 строки, ширина 110px)
          SizedBox(
            width: 110,
            child: Text(
              article['title'],
              style: AppTextStyles.body1.copyWith(fontSize: 12, height: 1.3),
              maxLines: 2,
              overflow: TextOverflow.ellipsis,
            ),
          ),
        ],
      ),
    );
  }
}
                    